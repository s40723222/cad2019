<h1><span style="color: #000000;">Weeks</span></h1>
<p><span style="color: #000000;"><a href="https://s40723222.github.io/cad2019/content/Weeks%202~5.html" style="color: #000000;">Weeks 2~5</a></span></p>
<p><span style="color: #000000;"><a href="https://s40723222.github.io/cad2019/content/Weeks%206~9.html" style="color: #000000;">Weeks 6~9</a></span></p>
<p><span style="color: #000000;"><a href="https://s40723222.github.io/cad2019/content/Weeks%2010~14.html" style="color: #000000;">Weeks 10~14</a>                                            </span></p>
<p><span style="color: #000000;"><a href="https://s40723222.github.io/cad2019/content/Weeks%2015~18.html" style="color: #000000;">Weeks 15~18</a></span></p>
<h2><span style="color: #000000;">Weeks 2~5</span></h2>
<p><span style="color: #000000;">Week 2</span></p>
<p><span style="color: #000000;">先下載<a href="https://drive.google.com/a/gm.nfu.edu.tw/uc?id=1fxMdqdCoCL__O1IpZ-Sv-A_4-c77Wx4E&amp;export=download" style="color: #000000;">2019Fall可攜式套件.7z</a>，並解壓縮，道<a href="https://github.com/" style="color: #000000;">github</a>網站建立新的repository，建立時要勾選Initialize this repository with a README，建立完成後將倉儲git clone下來。</span><br/><span style="color: #000000;">輸入git config --global user.name""、git config --global user.email""、git config --global http.proxy [2001:288:6004:17::7]:3128。</span><br/><span style="color: #000000;">輸入git submodule add <a href="https://github.com/mdecourse/cmsimde.git" style="color: #000000;">https://github.com/mdecourse/cmsimde.git</a> cmsimde，進入cmsimde\up_dir資料夾裡面，將所有檔案抓出來cad2019資料夾裡。</span><br/><span style="color: #000000;">開啟網站並修改標題後上傳到github倉儲裡。</span></p>
<p><span style="color: #000000;">Week 3</span></p>
<p><span style="color: #000000;">用git version檢查git的版本</span><br/><span style="color: #000000;">將Y:\portablegit\bin\sh.exe改名成sh_rename_for_solvespace.exe</span><br/><span style="color: #000000;">用git clone --recurse-submodules取得子模組<br/>git clone --recurse-submodules https://github.com/solvespace/solvespace.git solvespace</span><br/><span style="color: #000000;">edit Y:\tmp\solvespace\extlib\angle\CMakeLists.txt comment out line 713 and 714</span><br/><span style="color: #000000;">#list(APPEND ANGLE_DEFINITIONS</span><br/><span style="color: #000000;">#"-DANGLE_PRELOADED_D3DCOMPILER_MODULE_NAMES={ \"d3dcompiler_47.dll\", \"d3dcompiler_46.dll\", \"d3dcompiler_43.dll\" }")</span><br/><span style="color: #000000;">endif()</span><br/><span style="color: #000000;">手動進行libpng.dll.a的編譯，改名為 libpng_static.a放到編譯系統的lib目錄中。<br/>cd solvespace、cd extlib、cd libpng、mkdir build、cd build</span><br/><span style="color: #000000;">cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release mingw32-make</span><br/><span style="color: #000000;">rename libpng.dll.a to libpng_static.a and copy to Y:\msys64\mingw64\lib</span><br/><span style="color: #000000;">在solvespace建造並進入build目錄，執行cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release、mingw32-make<br/><a href="https://drive.google.com/file/d/16bLBcVUXWW_nQ1ki-Mtsox1DsSI-2gIj/view" style="color: #000000;">Solvespace 986da7d<br/></a><a href="https://drive.google.com/file/d/11lSoROAP5swT1RqX-eR-6aMhmOwx3zt3/view" style="color: #000000;">Solvespace.exe<br/></a><a href="https://drive.google.com/file/d/18R3erVkzKdvJmQ-ni7YzSb_izwGUkkeo/view" style="color: #000000;">Solvespace 22e4011</a><br/></span></p>
<p><span style="color: #000000;">Week 4</span></p>
<p><span style="color: #000000;">觀看 <a href="http://solvespace.com/tutorial.pl" style="color: #000000;">solvespace tutorials</a></span></p>
<p><span style="color: #000000;">Week 5</span></p>
<p><span style="color: #000000;">用 solvespace 進行繪圖</span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/99bP8P7BlU4" width="560"></iframe></p>
<h2><span style="color: #000000;">Weeks 6~9 </span></h2>
<p><span style="color: #000000;">Week 6</span></p>
<p><span style="color: #000000;">用繪圖軟體 Solvespace 編譯，零組件繪圖</span></p>
<p><span style="color: #000000;"><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/ZXBE29jlf4k" width="560"></iframe><br/></span></p>
<p><span style="color: #000000;">將零組件轉入 v-rep3 進行運動組立後，以 Lua 或 Python 進行控制。</span></p>
<p><span style="color: #000000;"><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/x1PqQP9dZNY" width="560"></iframe></span></p>
<p><span style="color: #000000;">Week7</span></p>
<p><span style="color: #000000;">slovespace-1</span></p>
<p><span style="color: #000000;"><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/Pv3Av42GshU" width="560"></iframe></span></p>
<p><span style="color: #000000;">slovespace-2</span></p>
<p><span style="color: #000000;"><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/D0jvPkrs5ls" width="560"></iframe></span></p>
<p><span style="color: #000000;">solvespace-3</span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/nU7aJ6QIb5c" width="560"></iframe></p>
<p><span style="color: #000000;">solvespace-4</span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/K3wIAXhY_fM" width="560"></iframe></p>
<p><span style="color: #000000;">solvespace-5</span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/ChBBglNoziw" width="560"></iframe></p>
<p><span style="color: #000000;">solvespace-6</span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/Iv6p5sQ3Oeg" width="560"></iframe></p>
<p><span style="color: #000000;">Week8</span></p>
<p><span style="color: #000000;">開啟 blog</span><br/><span style="color: #000000;">開啟python，將leo打開</span><br/><span style="color: #000000;">將 blog 的網址複製到 @path . ./ --&gt;Pelican 設定--&gt;遠端中 SITEURL<br/>將底下的 DISQUS_SITENAME 改為自己的學號<br/>在 local_blog 點選右鍵，點選goto script，將指令複製起來後，存儲<br/>道 python 輸入指令，完成</span></p>
<p><span style="color: #000000;">導入 webots<br/>下載 <a href="https://drive.google.com/file/d/1MolDH7kKJt_IIBTrKalsMfNWMrqqTWdt/view" style="color: #000000;">webots_2019b_rev1.7z</a> ，並解壓縮至Y槽<br/>將隨身系統中的 start_mdecourse.bat 複製一個並改名 start_webots.bat<br/>打開編譯器，將 start_mdecourse.bat 指令複製到 start_webots.bat<br/>輸入<br/>  set path_webots=%Disk%:\Webots_2019b_rev1\msys64\mingw64\bin;%Disk%:\Webots_2019b_rev1\msys64\usr\bin<br/>  start Y:\Webots_2019b_rev1\msys64\mingw64\bin\webots.exe<br/>重新啟動後，極可使用 start_webots.bat 開啟webots</span></p>
<p><span style="color: #000000;">ssh 對 github 的連線<br/>將 Y:\portablegit\bin 下的 sh_for_solvespace_compile.exe 複製並重新命名為 sh.exe<br/>將 python 打開並輸入 sh<br/>在 Y:\home_mdecourse 建立一個資料夾 .ssh<br/>再打完 sh 的編輯器裡輸入 ssh-keygen -t rsa  -b 4096 -C "使用者學號"<br/>下載 <a href="https://drive.google.com/file/d/1ISq1TJuaZyYZnfU33l-b7ifzmO3ejlEV/view">putty.7z</a> 放進Y槽裡並解壓縮<br/>編譯 star_mdecourse.bat ，加入以下指令<br/>set GIT_HOME=%Disk%:\portablegit\bin\<br/>set GIT_SSH=%Disk%:\putty\plink.exe<br/>將倉儲的 .git 裡面 config 中的 url 改成 ssh 形式<br/>將 python.exe ，設定 proxy 的路徑並存檔<br/>在到 github 存入自己的 key ，就完成 ssh 對 github 的連線</span></p>
<h2><span style="color: #000000;">Weeks 10~14</span></h2>
<h2><span style="color: #000000;">Weeks 15~18<br/></span></h2>
<p><span style="color: #000000;">Week15</span></p>
<p><span style="color: #000000;"><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/d1K260IqsMI" width="560"></iframe></span><span style="color: #000000;"><br/></span></p>
<p><span style="color: #000000;">Week17</span></p>
<p>Building the joints 建立關節</p>
<p>Now we will take care of the joints/motors. <br/>Most of the time, we know the exact position and orientation of each of the joints. <br/>In that case, we simply add the joints with [Menu bar --&gt; Add --&gt; Joints --&gt; ...], <br/>then we can change their position and orientation with the position dialog and orientation dialog. <br/>In other situations, we only have the Denavit-Hartenberg (i.e. D-H) parameters. <br/>In that case, we can build our joints via the tool model located in Models/tools/Denavit-Hartenberg joint creator.ttm, <br/>in the model browser. Othertimes, we have no information about the joint locations and orientations. <br/>Then, we need to extract them from the imported mesh. Let's suppose this is our case. <br/>Instead of working on the modified, more approximate mesh, we open a new scene, and import the original CAD data again.<br/>Most of the time, we can extract meshes or primitive shapes from the original mesh. <br/>The first step is to subdivide the original mesh. If that does not work, we do it via the triangle edit mode. <br/>Let's suppose that we could divide the original mesh. We now have smaller objects that we can inspect. <br/>We are looking for revolute shapes, that could be used as reference to create joints at their locations, with the same orientation. <br/>First, remove all objects that are not needed. It is sometimes also useful to work across several opened scenes, for easier visualization/manipulation. <br/>In our case, we focus first on the base of the robot: it contains a cylinder that has the correct position for the first joint. <br/>In the triangle edit mode, we have:</p>
<p>現在，我們注意關節/馬達。<br/>大多數時候，我們知道每個關節的確切位置和方向。<br/>在這種情況，我們需使用[菜單欄-&gt;添加-&gt;關節-&gt; ...]添加關節，然後可以用位置對話框和方向對話框更改它們的位置和方向。<br/>在其他情況，我們只有Denavit-Hartenberg（即D-H）參數。<br/>在這種情況，我們可以通過模型瀏覽器中位於Models / tools / Denavit-Hartenberg聯合creator.ttm中的工具模型來構建關節。<br/>有時，我們沒有關於關節位置和方向的信息。然後，我們需要從導入的網格中提取它們。<br/>讓我們假設這是我們的情況。無需處理修改過的，更近似的網格，而是打開一個新場景，然後再導入原始CAD數據。<br/>大多數時候，我們可以從原始網格中提取網格或基本形狀。第一步是細分原始網格。<br/>如果沒有用，我們通過三角形編輯模式進行操作。假設我們可劃分原始網格。<br/>現在，我們可以檢查較小的對象。我們在尋找旋轉形狀，可以用作在其位置以相同方向創建關節的參考。<br/>首先，刪除所有不需要的對象。<br/>有時在多個打開的場景中工作也很有用，以便於可視化/操作。<br/>在我們的案例中，我們首先關注機器人的基座：它包含一個圓柱體，該圓柱體的第一個關節的位置正確。<br/>在三角形編輯模式下，我們有：</p>
<p><img alt="" height="215" src="/images/圖1.jpg" width="474"/><br/><span>[Robot base: normal and triangle edit mode visualization]</span><br/><span>[機器人基礎：法線和三角形編輯模式可視化]</span></p>
<p>We change the camera view via the page selector toolbar button, in order to look at the object from the side. <br/>The fit-to-view toolbar button can come in handy to correctly frame the object in edition. <br/>Then we switch to the vertex edit mode and select all vertices that belong to the upper disc. <br/>Remember that by switching some layers on/off, we can hide other objects in the scene. <br/>Then we switch back to the triangle edit mode:</p>
<p>我們通過頁面選擇器工具欄按鈕更改相機視圖，以便從側面查看對象。 <br/>適合查看的工具欄按鈕可以派上用場，以正確構圖版本中的對象。 <br/>然後，我們切換到頂點編輯模式，並選擇屬於上光盤的所有頂點。 <br/>記得，通過打開/關閉某些層，我們可以隱藏場景中的其他對象。 <br/>然後我們切換回三角形編輯模式：</p>
<p><img alt="" height="208" src="/images/圖2.jpg" width="462"/><br/><span>[Selected upper disc, vertex edit mode (1 &amp; 2), triangle edit mode (3)]<br/></span><span lang="zh-TW" tabindex="0">[選擇的上光盤，頂點編輯模式（1和2），三角形編輯模式（3）]</span></p>
<p>Now we click Extract cylinder (Extract shape would also work in that case), <br/>this just created a cylinder shape in the scene, based on the selected triangles. <br/>We leave the edit mode and discard the changes. <br/>Now we add a revolute joint with [Menu bar --&gt; Add --&gt; Joint --&gt; Revolute], keep it selected, then control-select the extracted cylinder shape. <br/>In the position dialog, on the position tab, we click Apply to selection: this basically copies the x/y/z position of the cylinder to the joint. <br/>Both positions are now identical. <br/>In the orientation dialog, on the orientation tab, we also click Apply to selection: the orientation of our selected objects is now also the same. <br/>Sometimes, we will need to additionally rotate the joint about 90/180 degrees around its own reference frame in order to obtain the correct orientation or rotation direction.<br/>We could do that on the rotation tab of that dialog if needed (in that case, do not forget to click the Own frame button).<br/>In a similar way we could also shift the joint along its axis, or even do more complex operations. <br/>This is what we have:</p>
<p>現在，我們點選 Extract cylinder (在這種情況下 Extract shape 也將起作用)。<br/>這只是根據選定的三角形在場景中創建了圓柱體形狀。<br/>我們離開編輯模式並放棄更改。<br/>現在，通過[ Menu bar --&gt; Add --&gt; Joint --&gt; Revolute ]添加旋轉關節，使其保持選中狀態，然後控制選擇提取的圓柱形狀。<br/>然後控制選擇提取的圓柱形狀。<br/>在位置對話框的 position 選項卡上，點選 Apply to selection ：這基本上將圓柱體的x / y / z位置複製到關節。<br/>現在兩個位置都相同。<br/>在方向對話框中的方向選項卡上，我們還點選 Apply to selection ：所選對象的方向現在也相同。<br/>有時，我們將需要圍繞其自身的參考框架額外旋轉關節90/180度，以獲得正確的方向或旋轉方向。<br/>如果需要，我們可以在該對話框的 rotation 選項卡上執行此操作（在這種情況下，請不要忘記點選 Own frame 按鈕）。<br/>同樣，我們也可以沿關節的軸移動關節，甚至進行更複雜的操作。<br/>這就是我們所擁有的。</p>
<p><img alt="" height="203" src="/images/圖3.jpg" width="404"/></p>
<p>[Joint in correct location, with the correct orientation]<br/>[在正確的位置，以正確的方向接合]</p>
<p>Now we copy the joint back into our original scene, and save it (do not forget to save your work on a regular basis! The undo/redo function is useful, but doesn't protect you against other mishaps). <br/>We repeat above procedure for all the joints in our robot, then rename them. <br/>We also make all joints a little bit longer in the joint properties, in order to see them all. <br/>By defaut, joints will be assigned to visibility layer 2, but can be changed in the object common properties. <br/>We assign now all joints to visibility layer 10, then temporarily enable visibility layer 10 for the scene to also visualize those joints (by default, only visibility layers 1-8 are activated for the scene). <br/>This is what we have (the model ResizableFloor_5_25 was temporarily made invisible in the model properties dialog):</p>
<p>現在，我們將關節複製回到原始場景中，並保存它（不要忘記定期保存您的工作！ undo/redo 功能很有用，但不能保護您免受其他不幸的影響）。<br/>我們對機器人中的所有關節重複上述過程，然後重命名它們。<br/>我們還將使所有關節的關節屬性稍長一些，以便查看所有關節。<br/>通過默認，關節將分配給可見性層2，但可以在對象公共屬性中對其進行更改。<br/>現在，我們將所有關節分配給可見性層10，然後為場景臨時啟用可見性層10，以使這些關節也可視化（默認情況下，僅激活場景的可見性層1-8）。<br/>這就是我們所擁有的（模型 ResizableFloor_5_25 模型在模型屬性對話框中暫時不可見）:</p>
<p><img alt="" height="285" src="/images/圖4.jpg" width="448"/></p>
<p>[Joints in correct configuration]<br/>[接頭配置正確]</p>
<p>At this point, we could start to build the model hierarchy and finish the model definition.<br/>But if we want opur robot to be dynamically enabled, then there is an additional intermediate step:</p>
<p>至此，我們可以開始構建模型層次結構並完成模型定義。<br/>但是，如果我們希望動態啟用 opur 機器人，則還有一個額外的中間步驟。</p>
<h1><span style="color: #000000;">Note</span></h1>
<p><span style="color: #000000;">Solvespace 快捷鍵</span></p>
<table style="width: 534px;">
<tbody>
<tr style="height: 60px;">
<td style="width: 46px; height: 60px;"><span style="color: #000000;"><img alt="" height="25" src="/images/D.png" width="29"/></span></td>
<td style="width: 62px; text-align: center; height: 60px;"><span style="color: #000000;">D</span></td>
<td style="width: 151px; height: 60px;"><span style="color: #000000;">長度設定</span></td>
<td style="width: 51px; height: 60px;"><span style="color: #000000;"><img alt="" height="31" src="/images/N.png" width="32"/></span></td>
<td style="width: 68px; text-align: center; height: 60px;"><span style="color: #000000;">N</span></td>
<td style="width: 154px; height: 60px;"><span style="color: #000000;">角度設定</span></td>
</tr>
<tr style="height: 70px;">
<td style="width: 46px; height: 70px;"><span style="color: #000000;"><img alt="" height="26" src="/images/H.png" width="28"/></span></td>
<td style="width: 62px; text-align: center; height: 70px;"><span style="color: #000000;">H</span></td>
<td style="width: 151px; height: 70px;"><span style="color: #000000;">水平限制<br/>(左右疊合)</span></td>
<td style="width: 51px; height: 70px;"><span style="color: #000000;"><img alt="" height="29" src="/images/V.png" width="27"/></span></td>
<td style="width: 68px; text-align: center; height: 70px;"><span style="color: #000000;">V</span></td>
<td style="width: 154px; height: 70px;"><span style="color: #000000;">垂直限制<br/>(上下疊合)</span></td>
</tr>
<tr style="height: 70px;">
<td style="width: 46px; height: 70px;"><span style="color: #000000;"><img alt="" height="27" src="/images/L.png" width="29"/></span></td>
<td style="width: 62px; text-align: center; height: 70px;"><span style="color: #000000;">L</span></td>
<td style="width: 151px; height: 70px;"><span style="color: #000000;">平行限制</span><br/><span style="color: #000000;">(無交角)</span></td>
<td style="width: 51px; height: 70px;"><span style="color: #000000;"><img alt="" height="25" src="/images/A.png" width="28"/></span></td>
<td style="width: 68px; text-align: center; height: 70px;"><span style="color: #000000;">[</span></td>
<td style="width: 154px; height: 70px;"><span style="color: #000000;">垂直限制<br/>(90°)</span></td>
</tr>
<tr style="height: 70px;">
<td style="width: 46px; height: 70px;"><span style="color: #000000;"><img alt="" height="31" src="/images/O.png" width="30"/></span></td>
<td style="width: 62px; text-align: center; height: 70px;"><span style="color: #000000;">O</span></td>
<td style="width: 151px; height: 70px;"><span style="color: #000000;">重疊</span><br/><span style="color: #000000;">(點在線上)</span></td>
<td style="width: 51px; height: 70px;"><span style="color: #000000;"><img alt="" height="26" src="/images/Y.png" width="26"/></span></td>
<td style="width: 68px; text-align: center; height: 70px;"><span style="color: #000000;">Y</span></td>
<td style="width: 154px; height: 70px;"><span style="color: #000000;">對稱中心點</span></td>
</tr>
<tr style="height: 51px;">
<td style="width: 46px; height: 51px;"><span style="color: #000000;"><img alt="" height="27" src="/images/Q.png" width="28"/></span></td>
<td style="width: 62px; text-align: center; height: 51px;"><span style="color: #000000;">Q</span></td>
<td style="width: 151px; height: 51px;"><span style="color: #000000;">等長限制</span></td>
<td style="width: 51px; height: 51px;"><span style="color: #000000;"><img alt="" height="28" src="/images/X.png" width="28"/></span></td>
<td style="width: 68px; text-align: center; height: 51px;"><span style="color: #000000;">X</span></td>
<td style="width: 154px; height: 51px;"><span style="color: #000000;">物件平行</span></td>
</tr>
<tr style="height: 51px;">
<td style="width: 46px; height: 51px;"><span style="color: #000000;"><img alt="" height="26" src="/images/U.png" width="27"/></span></td>
<td style="width: 62px; text-align: center; height: 51px;"><span style="color: #000000;">U</span></td>
<td style="width: 151px; height: 51px;">
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr" id="tw-target-text"><span lang="zh-TW" style="color: #000000;" tabindex="0">其他輔助角</span></pre>
</td>
<td style="width: 51px; height: 51px;"><span style="color: #000000;"><img alt="" height="26" src="/images/E.png" width="28"/></span></td>
<td style="width: 68px; text-align: center; height: 51px;"><span style="color: #000000;">E</span></td>
<td style="width: 154px; height: 51px;"><span style="color: #000000;">切換參考尺寸</span></td>
</tr>
</tbody>
</table>
<h6><span style="color: #000000;">week18</span></h6>
<h1><span style="color: #000000;">About</span></h1>
<p><span style="color: #000000;">此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde" style="color: #000000;">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</span></p>
<h4><span style="color: #000000;">利用 cmsimde 建立靜態網誌方法:</span></h4>
<p><span style="color: #000000;">1. 在 github 建立倉儲, git clone 到近端</span></p>
<p><span style="color: #000000;">2. 參考 <a href="https://github.com/mdecourse/newcms" style="color: #000000;">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</span></p>
<p><span style="color: #000000;">以 git submodule add <a href="https://github.com/mdecourse/cmsimde" style="color: #000000;">https://github.com/mdecourse/cmsimde</a> cmsimde</span></p>
<p><span style="color: #000000;">建立 cmsimde 目錄, 並從 github 取下子模組內容.</span></p>
<p><span style="color: #000000;">3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</span></p>
<p><span style="color: #000000;">動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</span></p>
<p><span style="color: #000000;">4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</span></p>
<p><span style="color: #000000;">git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git" style="color: #000000;">https://github.com/mdecourse/newcms.git</a></span></p>
<h1><span style="color: #000000;">Develop</span></h1>
<p><span style="color: #000000;"><a href="https://github.com/mdecourse/cmsimde" style="color: #000000;">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</span></p>
<p><span style="color: #000000;">cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</span></p>
<p><span style="color: #000000;">init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</span></p>