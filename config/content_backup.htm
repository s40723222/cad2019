<h1>Weeks</h1>
<h2>Weeks 2~5</h2>
<p>Week 2</p>
<p>先下載<a href="https://drive.google.com/a/gm.nfu.edu.tw/uc?id=1fxMdqdCoCL__O1IpZ-Sv-A_4-c77Wx4E&amp;export=download">2019Fall可攜式套件.7z</a>，並解壓縮，道<a href="https://github.com/">github</a>網站建立新的repository，建立時要勾選Initialize this repository with a README，建立完成後將倉儲git clone下來。<br/>輸入git config --global user.name""、git config --global user.email""、git config --global http.proxy [2001:288:6004:17::7]:3128。<br/>輸入git submodule add <a href="https://github.com/mdecourse/cmsimde.git">https://github.com/mdecourse/cmsimde.git</a> cmsimde，進入cmsimde\up_dir資料夾裡面，將所有檔案抓出來cad2019資料夾裡。<br/>開啟網站並修改標題後上傳到github倉儲裡。</p>
<p>Week 3</p>
<p>用git version檢查git的版本<br/>將Y:\portablegit\bin\sh.exe改名成<span>sh_rename_for_solvespace.exe</span><br/>用<span>git clone </span><span>--recurse-submodules取得子模組<br/></span>git clone --recurse-submodules https://github.com/solvespace/solvespace.git solvespace<br/>edit Y:\tmp\solvespace\extlib\angle\CMakeLists.txt comment out line 713 and 714<br/>#list(APPEND ANGLE_DEFINITIONS<br/>#"-DANGLE_PRELOADED_D3DCOMPILER_MODULE_NAMES={ \"d3dcompiler_47.dll\", \"d3dcompiler_46.dll\", \"d3dcompiler_43.dll\" }")<br/>endif()<br/><span></span><span>手動進行libpng.dll.a的編譯，改名為 libpng_static.a放到編譯系統的lib目錄中。<br/></span>cd solvespace<span>、</span>cd extlib<span>、</span>cd libpng<span>、</span>mkdir build<span>、</span>cd build<br/>cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release mingw32-make<br/>rename libpng.dll.a to libpng_static.a and copy to Y:\msys64\mingw64\lib<br/>在<span>solvespace建造並進入build目錄，執行cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release、mingw32-make<br/><a href="https://drive.google.com/file/d/16bLBcVUXWW_nQ1ki-Mtsox1DsSI-2gIj/view">Solvespace 986da7d<br/></a><a href="https://drive.google.com/file/d/11lSoROAP5swT1RqX-eR-6aMhmOwx3zt3/view">Solvespace.exe<br/></a><a href="https://drive.google.com/file/d/18R3erVkzKdvJmQ-ni7YzSb_izwGUkkeo/view">Solvespace 22e4011</a><br/></span></p>
<p><span>Week 4</span></p>
<p><span>觀看 <a href="http://solvespace.com/tutorial.pl">solvespace tutorials</a></span></p>
<p><span>Week 5</span></p>
<p>用 solvespace 進行繪圖</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/99bP8P7BlU4" width="560"></iframe></p>
<h2><span>Weeks 6~9 </span></h2>
<p><span>Week 6</span></p>
<p><span>用繪圖軟體 Solvespace 編譯，零組件繪圖</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/ZXBE29jlf4k" width="560"></iframe></span><span><br/><span></span></span></p>
<p><span><span>將零組件轉入 v-rep3<span> </span></span><span>進行運動組立後，</span><span>以 Lua 或 Python 進行控制。</span></span></p>
<p><span><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/x1PqQP9dZNY" width="560"></iframe></span></span></p>
<h2>Weeks 10~14</h2>
<h2>Weeks 15~18</h2>
<h1>Note</h1>
<p></p>
<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules<span> </span><a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>